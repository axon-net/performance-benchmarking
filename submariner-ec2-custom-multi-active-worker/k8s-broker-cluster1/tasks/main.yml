---
# tasks file for k8s-broker-cluster1
- name: Add kubeconfig to bashrc
  shell: echo "export KUBECONFIG=/home/{{ ansible_user }}/config" >> /home/{{ ansible_user }}/.bashrc

- name: Enable Multipath Hash Policy in the Kernel
  shell: sudo sysctl net.ipv4.fib_multipath_hash_policy=1

- name: Register the private address of the EC2 host
  shell: hostname -I | awk "{print \$1}"
  register: node_ip

- name: Add the fixed up hostname into hosts file
  shell: echo "{{ node_ip.stdout }} {{ hostname }}" | sudo tee -a /etc/hosts

# the hostname is changed here to conform to a regex check in lighthouse of the cluster-id
# of '[a-z0-9]([-a-z0-9]*[a-z0-9])?')] which restricts the default EC2 hostname. The node
# is not rebooted so the command prompt will not reflect the new hostname.
- name: Set the new hostname
  command: sudo hostnamectl set-hostname {{ hostname }}

- name: Display the new hostname
  debug:
    msg: New hostname will be "{{ hostname }}"

- name: Pause for 10s to allow for the hostname change to stabilize
  pause:
    seconds: 10

- name: Install k3s on the broker node
  shell: curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="server --service-cidr {{ submariner_service_cidr_cluster1 }} --cluster-cidr {{ submariner_cluster_cidr_cluster1 }} " sh
  ignore_errors: True

- name: Wait for kubeconfig to be created
  wait_for:
    path: /etc/rancher/k3s/k3s.yaml
    state: present
    timeout: 30
  ignore_errors: True

- name: Copying kubeconfig to ansible user directory
  shell:  sudo cat /etc/rancher/k3s/k3s.yaml  > /home/{{ ansible_user }}/config

- name: Change the owner of config
  shell: "sudo chown $(id -u {{ ansible_user }}):$(id -g {{ ansible_user }}) /home/{{ ansible_user }}/config"

- name: Pause for 20s to allow for stabilization
  pause:
    seconds: 20

- name: Change the owner of kubeconfig
  shell: "sudo chown -R $(id -u {{ ansible_user }}):$(id -g {{ ansible_user }}) /home/{{ ansible_user }}/"

- name: Fixup the kubeconfig server address
  ansible.builtin.replace:
    path: /home/{{ ansible_user }}/config
    regexp: '127.0.0.1'
    replace: '{{ node_ip.stdout }}'

- name: Change the owner of the home dir
  shell: "sudo chown -hR {{ ansible_user }}:{{ ansible_user }} /home/{{ ansible_user }}/"

- name: Verify kubectl cmd
  command: kubectl get pods --all-namespaces --kubeconfig /home/{{ ansible_user }}/config

- fetch:
    src: /home/{{ ansible_user }}/config
    dest: ./
    flat: true

- name: Register the join token
  command: cat node-token chdir=/var/lib/rancher/k3s/server
  register: k8s_token

- name: Display the worker join token
  debug:
    msg: "{{ k8s_token.stdout }}"

- fetch:
    src: /var/lib/rancher/k3s/server/node-token
    dest: ./tokens/k8s-join-token-cluster1-{{ansible_date_time.iso8601}}
    flat: true

- name: Set the join token
  set_fact:
    k8s_token: "{{ k8s_token.stdout }}"

- name: Display the k8s master address
  debug:
    msg: "{{ k8s_master }}"

- name: Pause for 30s to allow for stabilization
  pause:
    seconds: 30

- name: Label the node as a gateway
  command: kubectl label node {{ hostname }} submariner.io/gateway=true --overwrite --kubeconfig /home/{{ ansible_user }}/config
