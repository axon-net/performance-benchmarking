---
# tasks file for deploy-netperf

- name: Ensure the submariner-gateway pod is in ready state
  shell: kubectl wait --for=condition=ready pod -l app=submariner-gateway --timeout=120s -n submariner-operator --kubeconfig /home/{{ ansible_user }}/config

- name: Create the Netserver StatefulSet and service listening on TCP/12865
  shell: |
    cat <<EOF > /home/{{ ansible_user }}/netserver-ss.yaml
    apiVersion: v1
    kind: Service
    metadata:
      name: netserver
      labels:
        app.kubernetes.io/instance: netserver
        app.kubernetes.io/name: netserver
    spec:
      ports:
      - port: 12865
        name: netserver
      clusterIP: None
      selector:
        app.kubernetes.io/instance: netserver
        app.kubernetes.io/name: netserver
    ---
    apiVersion: apps/v1
    kind: StatefulSet
    metadata:
      name: netserver
    spec:
      serviceName: "netserver"
      replicas: 1
      selector:
        matchLabels:
            app.kubernetes.io/instance: netserver
            app.kubernetes.io/name: netserver
      template:
        metadata:
          labels:
            app.kubernetes.io/instance: netserver
            app.kubernetes.io/name: netserver
        spec:
          containers:
          - name: netserver
            image: quay.io/networkstatic/netserver
            args: ["-D"]
            ports:
            - containerPort: 12865
              name: netserver
    EOF

- name: Starting the Netperf daemonset
  command: kubectl apply -f /home/{{ ansible_user }}/netserver-ss.yaml --kubeconfig /home/{{ ansible_user }}/config

- name: Pause for 10s to allow for stabilization
  pause:
    seconds: 10

- name: Download the Subctl Binary
  shell: |
    curl {{ submariner_subctl_binary_url }} --output /usr/local/bin/subctl
    chmod +x /usr/local/bin/subctl

- name: Export the Netserver StatefulSet with Submariner
  become_user: "{{ ansible_user }}"
  shell: subctl --kubeconfig /home/{{ ansible_user }}/config export service -n default netserver

- name: Pause for 5s for convergence
  pause:
    seconds: 5

- name: Register the exported Netserver address
  shell: kubectl get globalingressip --all-namespaces --kubeconfig /home/{{ ansible_user }}/config | grep netserver | awk "{print \$3}"
  register: netserver_target

- name: Pause for 30s to allow for grafana/tsdb stack to initialize
  pause:
    seconds: 30

- name: Display the Netserver target address
  debug:
    msg: "NetServer target address is: {{ netserver_target.stdout }}"

- name: Display the Netserver target address
  command: echo "Grafana URL is at http://{{ inventory_hostname }}/"
  register: GRAFANA_PUB_ADDRESS

- name: Display the Grafana Public Web Address
  debug:
    msg: "Grafana is running at http://{{ inventory_hostname }}"
